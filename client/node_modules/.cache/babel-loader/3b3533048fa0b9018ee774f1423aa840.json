{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/client/src/components/compileCode.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass CompileCode extends Component {\n  constructor() {\n    super();\n\n    this.inputInJava = e => {\n      this.setState({\n        inputJava: e.target.value\n      });\n    };\n\n    this.inputInPython = e => {\n      this.setState({\n        inputPython: e.target.value\n      });\n    };\n\n    this.changeLanguage = e => {\n      this.setState({\n        language: e.target.value\n      });\n    };\n\n    this.pressCompileButton = e => {\n      e.preventDefault();\n\n      if (this.state.language === \"java\") {\n        //api call for java code.\n        axios.post(\"http://localhost:5000/students/java/compileCode\", {\n          code: this.state.inputJava,\n          studentId: this.props.studentId\n        }).then(resFromBe => {\n          console.log(resFromBe);\n        });\n      } else {\n        //api call for python.\n        //api call for java code.\n        axios.post(\"http://localhost:5000/students/python/compileCode\", {\n          code: this.state.inputPython,\n          studentId: this.props.studentId\n        }).then(resFromBe => {\n          console.log(resFromBe);\n        });\n      }\n    };\n\n    this.state = {\n      inputJava: `class classroom{\n                public static void main(String[] args)\n                {\n                      System.out.println(\"hello world\");\n                }\n}`,\n      inputPython: `print(\"hello world\")`,\n      output: \"\",\n      language: \"java\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compile_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"language_select\",\n      required: true,\n      onChange: this.changeLanguage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      value: \"java\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, \"java\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"python\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"python\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"code_input\",\n      required: true,\n      value: this.state.language === \"java\" ? this.state.inputJava : this.state.inputPython,\n      onChange: this.state.language === \"java\" ? this.inputInJava : this.inputInPython,\n      placeholder: \"//write your code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 283\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"compile_code\",\n      onClick: this.pressCompileButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Compile and Run\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 132\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"code_output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Output\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 60\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"code_output\",\n      placeholder: \"//output is shown here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 107\n      }\n    }))));\n  }\n\n}\n\nexport default CompileCode;","map":{"version":3,"sources":["/root/Desktop/client/src/components/compileCode.js"],"names":["React","Component","axios","CompileCode","constructor","inputInJava","e","setState","inputJava","target","value","inputInPython","inputPython","changeLanguage","language","pressCompileButton","preventDefault","state","post","code","studentId","props","then","resFromBe","console","log","output","render"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\nimport axios from 'axios';\nclass CompileCode extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            inputJava : `class classroom{\n                public static void main(String[] args)\n                {\n                      System.out.println(\"hello world\");\n                }\n}`,\n            inputPython : `print(\"hello world\")`,\n            output : \"\",\n            language : \"java\",\n        }\n    }\n\n    inputInJava = (e) => {\n        this.setState({\n            inputJava : e.target.value\n        })\n    }\n\n    inputInPython = (e) =>{\n        this.setState({\n            inputPython : e.target.value\n        })\n    }\n\n    changeLanguage = (e) => {\n        this.setState({\n            language : e.target.value,\n        })\n    }\n\n    pressCompileButton = (e) =>{\n        e.preventDefault();\n        \n        if(this.state.language === \"java\")\n        {\n            //api call for java code.\n            axios.post(\"http://localhost:5000/students/java/compileCode\",{\n                code : this.state.inputJava,\n                studentId : this.props.studentId\n            })\n            .then(resFromBe => {\n                console.log(resFromBe);\n            })\n\n        }\n        else\n        {\n            //api call for python.\n              //api call for java code.\n              axios.post(\"http://localhost:5000/students/python/compileCode\",{\n                code : this.state.inputPython,\n                studentId : this.props.studentId\n            })\n            .then(resFromBe => {\n                console.log(resFromBe);\n            })\n        }\n    }\n\n    render(){\n        \n        return(\n            <React.Fragment>\n                <div className = \"compile_container\">\n                    <form>\n                        <select className = \"language_select\" required onChange = {this.changeLanguage}>\n                            <option selected value = \"java\">java</option>\n                            <option value = \"python\">python</option>    \n                        </select><br/>\n                    <textarea className = \"code_input\" required value = {this.state.language === \"java\" ? this.state.inputJava : this.state.inputPython} onChange = {this.state.language === \"java\" ? this.inputInJava : this.inputInPython} placeholder = \"//write your code\"></textarea><br/>\n                    <button type = \"submit\" className = \"compile_code\" onClick = {this.pressCompileButton}>Compile and Run</button><br/>\n                    <label for=\"code_output\">Output</label><br/>\n                    <textarea className = \"code_output\" placeholder = \"//output is shown here\"></textarea><br/>\n                    </form>\n                    </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CompileCode;"]},"metadata":{},"sourceType":"module"}