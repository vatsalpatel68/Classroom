{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/client/src/components/compileCode.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport $ from \"jquery\";\n\nclass CompileCode extends Component {\n  constructor() {\n    super();\n\n    this.inputInJava = e => {\n      this.setState({\n        inputJava: e.target.value\n      });\n    };\n\n    this.inputInPython = e => {\n      this.setState({\n        inputPython: e.target.value\n      });\n    };\n\n    this.changeLanguage = e => {\n      this.setState({\n        language: e.target.value,\n        output: \"\"\n      });\n      $(\".code_output\").css(\"color\", \"black\");\n    };\n\n    this.pressCompileButton = e => {\n      e.preventDefault();\n\n      if (this.state.language === \"java\") {\n        //api call for java code.\n        this.setState({\n          output: \"\"\n        });\n        axios.post(\"http://localhost:5000/students/java/compileCode\", {\n          code: this.state.inputJava,\n          studentId: this.props.studentId,\n          question_id: this.props.question_id\n        }).then(resFromBe => {\n          this.setState({\n            output: resFromBe.data.message,\n            error: resFromBe.data.error\n          });\n\n          if (this.state.error) {\n            $(\".code_output\").css(\"color\", \"red\");\n          } else {\n            $(\".code_output\").css(\"color\", \"green\");\n          }\n        });\n      } else {\n        //api call for python.\n        //api call for java code.\n        axios.post(\"http://localhost:5000/students/python/compileCode\", {\n          code: this.state.inputPython,\n          studentId: this.props.studentId,\n          question_id: this.props.question_id\n        }).then(resFromBe => {\n          this.setState({\n            output: resFromBe.data.message,\n            error: resFromBe.data.error\n          });\n\n          if (this.state.error) {\n            $(\".code_output\").css(\"color\", \"red\");\n          } else {\n            $(\".code_output\").css(\"color\", \"green\");\n          }\n        });\n      }\n    };\n\n    this.saveCode = e => {\n      e.preventDefault(); //if output is ok then he/she can able to send the question.\n\n      if (this.state.output) {\n        $(\".codeSaveWarn\").html(\"\");\n\n        if (!this.state.error) {\n          //here we send data to the backend.\n          $(\".codeSaveWarn\").html(\"\");\n          axios.post(\"http://localhost:5000/students/java/saveCode\", {\n            code: this.state.inputJava,\n            studentId: this.props.studentId,\n            question_id: this.props.question_id\n          }).then(resFromBe => {});\n        } else {\n          $(\".codeSaveWarn\").html(\"Please Solve the error First\");\n          $(\".codeSaveWarn\").css(\"color\", \"red\");\n        }\n      } else {\n        //when user is not compile the code.\n        $(\".codeSaveWarn\").html(\"Please Compile the code first.\");\n        $(\".codeSaveWarn\").css(\"color\", \"red\");\n      }\n    };\n\n    this.state = {\n      inputJava: `import java.util.*;\n            class classroom{\n                            public static void main(String[] args)\n                            {\n                                  System.out.println(\"hello world\");\n                            }\n            }`,\n      inputPython: `print(\"hello world\")`,\n      output: \"\",\n      language: \"java\",\n      error: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compile_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"language_select\",\n      required: true,\n      onChange: this.changeLanguage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      value: \"java\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, \"java\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"python\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, \"python\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"code_input\",\n      required: true,\n      value: this.state.language === \"java\" ? this.state.inputJava : this.state.inputPython,\n      onChange: this.state.language === \"java\" ? this.inputInJava : this.inputInPython,\n      placeholder: \"//write your code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 283\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"compile_code\",\n      onClick: this.pressCompileButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, \"Compile and Run\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 132\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"code_output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"Output\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 60\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"code_output\",\n      id: \"codeOutput\",\n      value: this.state.output,\n      placeholder: \"//output is shown here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 152\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"codeSaveWarn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/student/ShowProblemStudent/\" + this.props.params.match.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.saveCode,\n      className: \"compile_code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 80\n      }\n    }, \"Save\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 161\n      }\n    }))));\n  }\n\n}\n\nexport default CompileCode;","map":{"version":3,"sources":["/root/Desktop/client/src/components/compileCode.js"],"names":["React","Component","axios","Link","$","CompileCode","constructor","inputInJava","e","setState","inputJava","target","value","inputInPython","inputPython","changeLanguage","language","output","css","pressCompileButton","preventDefault","state","post","code","studentId","props","question_id","then","resFromBe","data","message","error","saveCode","html","render","params","match","id"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport $ from \"jquery\";\nclass CompileCode extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            inputJava : `import java.util.*;\n            class classroom{\n                            public static void main(String[] args)\n                            {\n                                  System.out.println(\"hello world\");\n                            }\n            }`,\n            inputPython : `print(\"hello world\")`,\n            output : \"\",\n            language : \"java\",\n            error : false\n        }\n    }\n\n    inputInJava = (e) => {\n        this.setState({\n            inputJava : e.target.value\n        })\n    }\n\n    inputInPython = (e) =>{\n        this.setState({\n            inputPython : e.target.value\n        })\n    }\n\n    changeLanguage = (e) => {\n        this.setState({\n            language : e.target.value,\n\t    output : \"\"\n        })\n\t$(\".code_output\").css(\"color\" , \"black\")\n\n    }\n\n    pressCompileButton = (e) =>{\n        e.preventDefault();\n        \n        if(this.state.language === \"java\")\n        {\n            //api call for java code.\n            this.setState({\n                output : \"\"\n            })\n            axios.post(\"http://localhost:5000/students/java/compileCode\",{\n                code : this.state.inputJava,\n                studentId : this.props.studentId,\n                question_id : this.props.question_id\n            })\n            .then(resFromBe => {\n                this.setState({\n                    output : resFromBe.data.message,\n                    error : resFromBe.data.error\n                })\n\n\t\tif(this.state.error){\n\t\t\t$(\".code_output\").css(\"color\",\"red\");\t\n\t\t}\n\t\telse{\n\t\t\t$(\".code_output\").css(\"color\",\"green\")\t\t\t\n\t\t}\n            })\n\n        }\n        else\n        {\n            //api call for python.\n              //api call for java code.\n              axios.post(\"http://localhost:5000/students/python/compileCode\",{\n                code : this.state.inputPython,\n                studentId : this.props.studentId,\n                question_id : this.props.question_id\n            })\n            .then(resFromBe => {\n                   this.setState({\n                    output : resFromBe.data.message,\n                    error : resFromBe.data.error\n                })\n\n\t\tif(this.state.error){\n\t\t\t$(\".code_output\").css(\"color\",\"red\");\t\n\t\t}\n\t\telse{\n\t\t\t$(\".code_output\").css(\"color\",\"green\")\t\t\t\n\t\t}\n            })\n        }\n    }\n\n    saveCode = (e) => {\n\te.preventDefault();\n\t//if output is ok then he/she can able to send the question.\n\n\tif(this.state.output){\n\t\t$(\".codeSaveWarn\").html(\"\");\t\n\t\tif(!this.state.error)\n\t\t{\n\t\t\t//here we send data to the backend.\n\t\t\t$(\".codeSaveWarn\").html(\"\");\n\t\t\taxios.post(\"http://localhost:5000/students/java/saveCode\",{\n\t\t\t\tcode : this.state.inputJava,\n\t\t\t\tstudentId : this.props.studentId,\n                \t\tquestion_id : this.props.question_id,\n\t\t\t})\n\t\t\t.then(resFromBe =>{\n\t\t\t\t\t\t\t\n\t\t\t})\n\t\t\t\n\t\t}\t\n\t\telse\n\t\t{\n\t\t\t$(\".codeSaveWarn\").html(\"Please Solve the error First\");\n\t\t\t$(\".codeSaveWarn\").css(\"color\",\"red\");\t\t\n\t\t}\t\t\n        }\n\telse{\n\t\t//when user is not compile the code.\n\t\t$(\".codeSaveWarn\").html(\"Please Compile the code first.\");\n\t\t$(\".codeSaveWarn\").css(\"color\",\"red\");\n\t\t\t\t\n\t}\n\t}\n\n    render(){\n        \n        return(\n            <React.Fragment>\n                <div className = \"compile_container\">\n                    <form>\n                        <select className = \"language_select\" required onChange = {this.changeLanguage}>\n                            <option selected value = \"java\">java</option>\n                            <option value = \"python\">python</option>    \n                        </select><br/>\n                    <textarea className = \"code_input\" required value = {this.state.language === \"java\" ? this.state.inputJava : this.state.inputPython} onChange = {this.state.language === \"java\" ? this.inputInJava : this.inputInPython} placeholder = \"//write your code\"></textarea><br/>\n                    <button type = \"submit\" className = \"compile_code\" onClick = {this.pressCompileButton}>Compile and Run</button><br/>\n                    <label for=\"code_output\">Output</label><br/>\n                    <textarea className = \"code_output\" id = \"codeOutput\" value = {this.state.output}placeholder = \"//output is shown here\"></textarea><br/>\n\t\t    <h3 className = \"codeSaveWarn\"></h3>\n\t\t    <Link to = {\"/student/ShowProblemStudent/\" + this.props.params.match.id}><button onClick = {this.saveCode} className = \"compile_code\">Save</button></Link><br/>\n                    </form>\n                    </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CompileCode;\n"]},"metadata":{},"sourceType":"module"}